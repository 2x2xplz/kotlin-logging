buildscript {
    apply from: 'versions.gradle'

    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
    }
}

allprojects {
    group 'io.github.microutils'
    version '1.6.10'

    repositories {
        mavenCentral()
    }
}

apply plugin: 'kotlin'

subprojects {

    apply plugin: 'maven-publish'
    apply plugin: 'com.jfrog.bintray'

    def varintName = "kotlin-logging"

    if (project.name != "kotlin-logging-jvm") {
        varintName = "${project.name}"
    }

    afterEvaluate {
        task sourceJar(type: Jar, dependsOn: classes) {
            classifier 'sources'
            from sourceSets.main.kotlin
            duplicatesStrategy = "exclude"
            def platformSrc = sourceSets.main.kotlin
            def commonSrc = project(':kotlin-logging-common').sourceSets.main.kotlin
            from (platformSrc + commonSrc)
        }

        task javadocJar(type: Jar, dependsOn: javadoc) {
            classifier = 'javadoc'
            from javadoc.destinationDir
        }
    }

    tasks.withType(Jar) {
        archivesBaseName = varintName
    }

    def pomConfig = {
        name "kotlin-logging"
        description "kotlin-logging $version - Lightweight logging framework for Kotlin"
        url "https://github.com/MicroUtils/kotlin-logging"

        scm {
            url "http://github.com/MicroUtils/kotlin-logging/tree/master"
            connection "scm:git:git://github.com/MicroUtils/kotlin-logging.git"
            developerConnection "scm:git:ssh://github.com:MicroUtils/kotlin-logging.git"
        }
        licenses {
            license {
                name "The Apache Software License, Version 2.0"
                url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            }
        }
        developers {
            developer {
                name "Ohad Shai"
                email "ohadshai@gmail.com"
                organization "github"
                organizationUrl "http://www.github.com"
            }
        }
    }

    publishing {
        publications {
            mavenProject(MavenPublication) {
                from components.java
                groupId project.group
                artifactId varintName
                version project.version

                pom.withXml {
                    def root = asNode()
                    root.appendNode('description', "kotlin-logging $version - Lightweight logging framework for Kotlin")
                    root.children().last() + pomConfig
                }


                artifact sourceJar {
                    classifier "sources"
                }
                artifact javadocJar {
                    classifier "javadoc"
                }
            }
        }
    }

    bintray {
        user = 'oshai'//project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
        key = 'mykey' //https://bintray.com/profile/edit
        // project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
        publications = ['mavenProject']
        publish = true //[Default: false] Whether version should be auto published after an upload
        pkg {
            repo = 'kotlin-logging'
            name = 'kotlin-logging'
            userOrg = 'microutils'
            licenses = ['Apache-2.0']
            vcsUrl = 'https://github.com/MicroUtils/kotlin-logging'
            websiteUrl = 'https://github.com/MicroUtils/kotlin-logging'
            issueTrackerUrl = 'https://github.com/MicroUtils/kotlin-logging/issues'

            githubRepo = 'MicroUtils/kotlin-logging'
            githubReleaseNotesFile = 'ChangeLog.md'
            version {
                name = project.version
                desc = "kotlin-logging - Lightweight logging framework for Kotlin"
                released = new Date()
                gpg {
                    sign = true //Determines whether to GPG sign the files. The default is false
                }
                mavenCentralSync {
                    sync = true //[Default: true] Determines whether to sync the version to Maven Central.
                    user = 'token' //OSS user token: mandatory
                    password = 'pass' //OSS user password: mandatory
                    close = '1' //Optional property. By default the staging repository is closed and artifacts are released to Maven Central. You can optionally turn this behaviour off (by puting 0 as value) and release the version manually.
                }
            }
        }
    }
}


